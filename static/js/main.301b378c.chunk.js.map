{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","formRef","React","createRef","inputRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleAdd","handleReset","habits","state","map","setState","id","onReset","Component","Navbar","totalCount","App","item","filter","Date","now","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.301b378c.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {  \r\n    \r\n    // lifecycle - component가 보여질때\r\n    componentDidMount(){\r\n        console.log(`habit: ${this.props.habit.name} mounted`);\r\n    }\r\n    // lifecycle - component가 지워지기전에\r\n    componentWillUnmount(){\r\n        console.log(`habit: ${this.props.habit.name} will unmounted`);\r\n    }\r\n    handleIncrement = () => {\r\n        this.props.onIncrement(this.props.habit);\r\n    };\r\n\r\n    handleDecrement = () => {\r\n        this.props.onDecrement(this.props.habit);\r\n    };\r\n\r\n    handleDelete    = () => {\r\n        this.props.onDelete(this.props.habit);\r\n    };\r\n\r\n    render() {\r\n        // console.log(this.props.habit);\r\n        const { name, count } = this.props.habit;\r\n        \r\n        return (\r\n            <li className=\"habit\">\r\n                <span className=\"habit-name\">{name}</span>\r\n                <span className=\"habit-count\">{count}</span>\r\n                <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\r\n                    <i className=\"fas fa-minus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habit;","import React, { memo } from 'react';\r\n\r\nconst HabitAddForm = memo(props => {\r\n    const formRef = React.createRef();\r\n    const inputRef = React.createRef();\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();        \r\n        const name = inputRef.current.value;\r\n        name && props.onAdd(name);        \r\n        formRef.current.reset();\r\n    };\r\n    \r\n    return(\r\n        <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\r\n            <input ref={inputRef} type=\"text\" className=\"add-input\" placeholder=\"Habit\"/>\r\n            <button className=\"add-button\">Add</button>\r\n        </form>            \r\n    );\r\n});\r\n\r\nexport default HabitAddForm;\r\n\r\n// class\r\n// import React, { PureComponent } from 'react';\r\n// class HabitAddForm extends PureComponent {\r\n//     formRef = React.createRef();\r\n//     inputRef = React.createRef();\r\n\r\n//     onSubmit = event => {\r\n//         event.preventDefault();        \r\n//         const name = this.inputRef.current.value;\r\n//         name && this.props.onAdd(name);        \r\n//         this.formRef.current.reset();\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <form ref={this.formRef} className=\"add-form\" onSubmit={this.onSubmit}>\r\n//                 <input ref={this.inputRef} type=\"text\" className=\"add-input\" placeholder=\"Habit\"/>\r\n//                 <button className=\"add-button\">Add</button>\r\n//             </form>\r\n            \r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default HabitAddForm;","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\nimport HabitAddForm from './habitAddForm';\r\n\r\nclass Habits extends Component {\r\n\r\n    handleIncrement = habit => {        \r\n        this.props.onIncrement(habit);\r\n    };\r\n\r\n    handleDecrement = habit => {        \r\n        this.props.onDecrement(habit);\r\n    };\r\n\r\n    handleDelete    = habit => {                \r\n        this.props.onDelete(habit);\r\n    };\r\n    handleAdd = name => {\r\n        this.props.onAdd(name);\r\n    };\r\n    handleReset = () =>{\r\n        const habits = this.state.habits.map(habit =>{\r\n            habit.count = 0;\r\n            return habit;\r\n        });\r\n        this.setState({ habits });\r\n    }\r\n    handleReset = () => {}\r\n    render() {\r\n        return (\r\n            <>\r\n                <HabitAddForm onAdd={this.handleAdd}/>\r\n                <ul>\r\n                {\r\n                    this.props.habits.map(habit => (\r\n                        <Habit \r\n                        key={habit.id} \r\n                        habit={habit}                        \r\n                        onIncrement={this.handleIncrement} \r\n                        onDecrement={this.handleDecrement} \r\n                        onDelete={this.handleDelete}\r\n                        />\r\n                    ))\r\n                }\r\n                </ul>\r\n                <button className=\"habits-reset\" onClick={this.props.onReset}>Reset All</button>\r\n            </>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default Habits;","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <i className=\"navbar-logo fas fa-leaf\"></i>\r\n                <span>Habit Tracker</span>\r\n                <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\nclass App extends Component{\n  state = {\n    habits: [\n        { id : 1, name:'Reading', count:0 },\n        { id : 2, name:'Running', count:0 },\n        { id : 3, name:'Coding', count:0 },\n    ],        \n  };\n  handleIncrement = habit => {        \n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // habits[index].count++;\n    const habits = this.state.habits.map(item => {\n      if(item.id === habit.id){\n        return{...habit, count: habit.count + 1};\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDecrement = habit => {        \n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // const count = habits[index].count-1;        \n    // habits[index].count = count < 0 ? 0 : count;\n    const habits = this.state.habits.map(item => {\n      if (item.id === habit.id) {\n        const count =habit.count - 1;\n        return{...habit, count: count < 0 ? 0: count };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDelete = habit => {                \n    const habits = this.state.habits.filter( item => item.id !== habit.id );      \n    this.setState({ habits });\n  };\n\n  handleAdd = name => {\n    const habits = [...this.state.habits, {id: Date.now(), name: name, count: 0}];\n    this.setState({ habits });\n\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map(habit => {\n      // habit.count = 0;\n      // return habit;\n      if(habit.count !== 0){\n        return {...habit, count : 0 };\n      }\n      return habit;\n    });\n    this.setState({ habits });\n  }\n\n  render(){\n    return(\n      <>\n        <Navbar totalCount={this.state.habits.filter(item=>item.count>0).length}/>        \n        <Habits \n          habits={this.state.habits} \n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>            \n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  //검사하기위함->배포시에는 두번씩 출력되지않음\n  <React.StrictMode>\n  <App />\n  {/* <SimpleHabit /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}